{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"construct": {
		"scope": "php",
		"prefix": "construct",
		"body": [
			"class $1\n{\n\tpublic function __construct()\n\t{\n\t\t//code \n\t}\n}"
		],
		"description": "brand new php class file"
	},
	"create": {
		"scope": "php",
		"prefix": "create",
		"body": [
			"class $1\n{\n\tprivate function __construct()\n\t{\n\t\t//code \n\t}\n\n\tpublic static function create()\n\t{\n\t\treturn new static();\n\t}\n}"
		],
		"description": "brand new php class file"
	},
	"try catch": {
		"scope": "php",
		"prefix": "trycatch",
		"body": [
			"try {\n\t//code\n} catch(\\Exception \\$exception){\n\t throw new \\Exception(\"bla\");\n}\n"
		],
		"description": "pre filled try"
	},
	"simple public function": {
		"scope": "php",
		"prefix": "pubfun",
		"body": [
			"public function $1 ()\n{\n\t//code\n}"
		],
		"description": "simple public function declaration"
	},
	"simple protected function": {
		"scope": "php",
		"prefix": "protfun",
		"body": [
			"protected function $1 ()\n{\n\t//code\n}"
		],
		"description": "simple protected function declaration"
	},
	"printr pre encapsulate": {
		"scope": "php",
		"prefix": "pprintr",
		"body": [
			"echo '<pre>'; print_r($1); echo '</pre>';"
		],
		"description": "encapsulate printr with pre"
	},
	"die with __file__": {
		"scope": "php",
		"prefix": "die",
		"body": [
			"die(\"\\e[30;48;5;166m\".__FILE__ . '::' . __LINE__ .\"\\e[0m\". PHP_EOL);"
		],
		"description": "Write a die with visible informations (to find it easily) in it"
	},
	"var_dump pre encapsulate": {
		"scope": "php",
		"prefix": "pvardump",
		"body": [
			"echo '<pre>'; var_dump($1); echo '</pre>';"
		],
		"description": "encapsulate var_dump with pre"
	}
}